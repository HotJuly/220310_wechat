需求:当用户点击上一首/下一首按钮时,自动展示对应歌曲信息,自动播放对应歌曲
拆解:
	1.当用户点击上一首/下一首按钮时
		绑定事件监听
		事件源:上一首/下一首按钮
		事件名:tap

	2.自动展示对应歌曲信息
		其实这个功能已经实现了,我们进入页面的时候就会发送请求获取对应歌曲信息,并放入data中,在wxml中使用展示

		问题:对应歌曲是哪一首?

	3.自动播放对应歌曲
		其实这个功能也已经实现了,在播放按钮逻辑中,使用了背景音频管理器进行播放
			添加src和title属性即可

		问题:对应歌曲是哪一首?

		合并2和3的问题:对应歌曲是哪一首?

			播放列表数据在每日推荐页面,而用户正在song页面
			需要将每日推荐页面的数据传递给送页面(涉及到了两个页面之间的通信)

			Vue中,两个一级路由组件通信方式:
				1.Vuex
				2.localStorage,sessionStorage
				3.路由传参
				4.事件总线
					角色:
						1.订阅者
							想要接收数据的人
						2.发布者
							想要发送数据的人

					操作:
						1.订阅	->	$on
							订阅一次->$once
						2.发布	->	$emit
						3.解绑	->	$off

					约束:
						1.订阅必须在发布之前
						2.订阅者和发布者必须同时存在

			小程序中
				1.app实例对象
					将整个列表以及当前歌曲下标存入到内存中

				2.Storage
					将整个列表以及当前歌曲下标存入到内存中

				3.路由传参(只支持query传参,url传参)
					路由传参必须跟随着路由跳转操作实现
						而当前用户进入song页面之后从未离开,所以只有一次传入的机会
					但是URL传参又有长度限制,无法传递过多的数据

				4.PubSub
					操作:
						1.订阅	->	PubSub.subscribe(消息名称,接收数据的回调函数)
						2.发布	->	PubSub.publish(消息名称,需要传递的数据)
						3.解绑	->	
							var token = PubSub.subscribe('MY TOPIC', mySubscriber);
							PubSub.unsubscribe(token);

					小程序使用npm包流程:
						1.初始化说明书
							npm init -y

						2.下载依赖
							npm i pubsub-js

						3.构建npm(小程序独有)
							微信开发者工具->工具->构建npm

						4.引入依赖
							import PubSub from '包名'

						5.使用PubSub

						注意:每次下载新的npm包,都需要重新构建npm

			









				